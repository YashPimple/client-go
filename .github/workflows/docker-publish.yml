name: Build and Push

on:
  push:
    tags: [ 'v*.*.*' ]
    branches:
      - "main"

env:
  IMAGE_NAME: ${{ github.repository }}
  Dockerfile: Dockerfile
  PROJECTS: gpu-cloud

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0 # v3.0.0

      - name: docker login
        uses: docker/login-action@v1
        with:
          registry: reg.neev.work
          username: ${{ secrets.HARBOR_USERNAME  }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v5.0.0 # v5.0.0
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # - name: Build Docker image
      #   id: build-image
      #   run: |
      #     docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.ref }} -f ${{ env.Dockerfile }} .

      # - name: Push Docker image to Harbor
      #   if: github.event_name != 'pull_request'
      #   run: docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.ref }}
      - name: Build and tag image
        run: |
              COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
              docker build -t ${{ env.REGISTRY }}/gpu-cloud/${{ github.repository }}:$COMMIT_SHA -f Dockerfile .    

      - name: Push the image to Harbor
        run: docker push ${{ env.REGISTRY }}/gpu-cloud/${{ github.repository }}:$COMMIT_SHA
  
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAG: ${{ steps.ref }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAG}" | xargs -I {} cosign sign --yes {}@${DIGEST}
